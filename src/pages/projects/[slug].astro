---
//import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { siteConfig } from "../../config";
import "../../styles/global.css";

export async function getStaticPaths() {
  return siteConfig.projects.map((project) => ({
    params: { slug: project.slug },
  }));
}

const { slug } = Astro.params;
const project = siteConfig.projects.find((item) => item.slug === slug);

if (!project) {
  throw Astro.redirect(`${import.meta.env.BASE_URL}404`);
}

const pageTitle = `${project.name} â€“ ${siteConfig.name}`;
const hasImages = Array.isArray(project.images) && project.images.length > 0;
const hasVideo = Boolean(project.youtubeId);
const hasExternalLink = Boolean(project.link);
const homeHref = import.meta.env.BASE_URL || "/";
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href={`${import.meta.env.BASE_URL}favicon.svg`} />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{pageTitle}</title>
    <meta name="description" content={project.description} />
  </head>
  <body class="bg-white text-gray-900">
    {/*<Header />*/}
    {/*Back button for heading back to projects*/}
     <div id="project-back-nav"class="fixed top-0 left-0 right-0 z-50 transition-all duration-300 bg-white/80 backdrop-blur-sm shadow-sm">
      <nav class="px-6 sm:px-10 md:px-16 lg:px-24 py-4">
        <div class="max-w-5xl mx-auto">
          <a
            href={homeHref}
            class="inline-flex items-center gap-2 text-gray-700 hover:text-black transition-colors font-medium"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="w-4 h-4"
            >
              <path stroke-linecap="round" stroke-linejoin="round" d="M10.5 19.5L3 12m0 0l7.5-7.5M3 12h18" />
            </svg>
            Back to projects
          </a>
        </div>
      </nav>
    </div>

    <main class="min-h-screen  pt-24">
      <section class="px-6 sm:px-10 md:px-16 lg:px-24 py-16 sm:py-20 md:py-24">
        <div class="max-w-5xl mx-auto space-y-12">
          <header class="space-y-4">
            <span
              class="text-sm font-mono uppercase tracking-[0.3em]"
              style={{ color: siteConfig.accentColor }}
            >
              Project
            </span>
            <h1 class="text-3xl sm:text-4xl md:text-5xl font-bold">
              {project.name}
            </h1>
            <p class="text-lg sm:text-xl text-gray-600 leading-relaxed">
              {project.description}
            </p>
            {hasExternalLink && (
              <a
                class="inline-flex items-center gap-2 px-4 py-2 rounded-full text-sm font-semibold text-white shadow-md transition-colors"
                style={{ backgroundColor: siteConfig.accentColor }}
                href={project.link}
                target="_blank"
                rel="noopener noreferrer"
              >
                Visit project
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke-width="1.5"
                  stroke="currentColor"
                  class="w-4 h-4"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M4.5 19.5l15-15m0 0H8.25m11.25 0v11.25"
                  />
                </svg>
              </a>
            )}
          </header>

          <section class="space-y-4">
            <h2 class="text-2xl font-semibold">Skills & Technologies</h2>
            <ul class="flex flex-wrap gap-2">
              {project.skills.map((skill) => (
                <li class="px-3 py-1 rounded-lg bg-gray-900 text-white text-sm">
                  {skill}
                </li>
              ))}
            </ul>
          </section>
           {/*image that can be clicked, aka a button, to show it enlarged*/}
          {hasImages && (
            <section class="space-y-4">
              <h2 class="text-2xl font-semibold">Gallery</h2>
              <div class="grid gap-6 sm:grid-cols-2">
                {project.images?.map((image, index) => (
                  <figure class="overflow-hidden rounded-2xl border border-gray-200 shadow-sm bg-gray-50">
                     <button
                      type="button"
                      class="block w-full focus:outline-none focus-visible:ring-4 focus-visible:ring-offset-2 focus-visible:ring-gray-900/40"
                      data-image={image}
                    >
                      <img
                        src={image}
                        alt={`${project.name} screenshot ${index + 1}`}
                        class="w-full h-full object-cover transition duration-300 hover:scale-105"
                        loading="lazy"
                      />
                    </button>
                  </figure>
                ))}
              </div>

              {/*Dialog that show the image enlarged*/}
              <dialog
                id="image-dialog"
                class="m-0 p-0 w-screen h-screen max-w-none bg-transparent
                      open:flex open:items-center open:justify-center
                      backdrop:bg-black/80"
              >
                <div class="relative max-w-[95vw] max-h-[95vh]">
                  <button
                    type="button"
                    id="dialog-close"
                    class="absolute right-4 top-4 rounded-full bg-black/70 text-white px-3 py-1 text-sm font-medium"
                  >
                    Close
                  </button>
                  <img
                    id="dialog-image"
                    src=""
                    alt="Project screenshot enlarged"
                    class="block max-w-[95vw] max-h-[90vh] object-contain"
                  />
                </div>
              </dialog>
              
             {/*Script for enlarge and close images of the gallery*/}
              <script>
                const dialog = document.getElementById("image-dialog");
                const dialogImage = document.getElementById("dialog-image");
                const closeButton = document.getElementById("dialog-close");

                if (
                  dialog instanceof HTMLDialogElement &&
                  dialogImage instanceof HTMLImageElement &&
                  closeButton instanceof HTMLButtonElement
                ) {
                  // open
                  document.querySelectorAll("[data-image]").forEach((el) => {
                    if (!(el instanceof HTMLButtonElement)) return;
                    el.addEventListener("click", () => {
                      const src = el.dataset.image;
                      if (!src) return;
                      dialogImage.src = src;
                      document.documentElement.style.overflow = "hidden"; // lock scroll
                      dialog.showModal();
                    });
                  });

                  // close
                  const close = () => {
                    dialog.close();
                    document.documentElement.style.overflow = ""; // restore scroll
                  };
                  closeButton.addEventListener("click", close);
                  dialog.addEventListener("cancel", (e) => { e.preventDefault(); close(); });

                  // click on backdrop closes
                  dialog.addEventListener("click", (e) => {
                    if (e.target === dialog) close();
                  });
                }
              </script>
            </section>
          )}

          {hasVideo && (
            <section class="space-y-4">
              <h2 class="text-2xl font-semibold">Video walkthrough</h2>
              <div class="aspect-video w-full overflow-hidden rounded-2xl border border-gray-200 shadow-sm">
                <iframe
                  src={`https://www.youtube.com/embed/${project.youtubeId}`}
                  title={`${project.name} demo video`}
                  loading="lazy"
                  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                  allowfullscreen
                  class="w-full h-full"
                />
              </div>
            </section>
          )}
        </div>
      </section>
    </main>
    <Footer />
    {/*Scripts for adding shadows to the back button/navbar*/}
    <script>
      const backNav = document.getElementById("project-back-nav");
      if (backNav instanceof HTMLElement) {
        const updateNav = () => {
          if (window.scrollY > 10) backNav.classList.add("shadow-sm");
          else backNav.classList.remove("shadow-sm");
        };
        updateNav();
        window.addEventListener("scroll", updateNav, { passive: true });
      }
    </script>
  </body>
</html>